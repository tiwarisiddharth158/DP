#include<bits/stdc++.h>
using namespace std;

int dp[5][8] = {0};

int knapSack(int wt[],int val[],int n,int W)
{
    if(n==0||W==0)
        return 0;
    if(dp[n][W]!=0)
        return dp[n][W];
    if(wt[n-1]>W)
        return dp[n][W] = knapSack(wt,val,n-1,W);
    else if(wt[n-1]<=W)
        return dp[n][W] = max(val[n-1]+knapSack(wt,val,n-1,W-wt[n-1]),knapSack(wt,val,n-1,W));
}

int main()
{
    int wt[] = {1,3,4,5};
    int val[] = {1,4,5,7};
    cout<<knapSack(wt,val,4,7);
}
