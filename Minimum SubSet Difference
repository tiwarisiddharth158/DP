#include<bits/stdc++.h>
using namespace  std;

vector<int> subSum(int arr[],int n,int r)
{
    bool dp[n+1][r+1];
    for(int j=0;j<=r;j++)
        dp[0][j] = false;
    for(int i=0;i<=n;i++)
        dp[i][0] = true;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=r;j++)
        {
            if(arr[i-1]<=j)
                dp[i][j] = dp[i-1][j-arr[i-1]]||dp[i-1][j];
            else if(arr[i-1]>j)
                dp[i][j] = dp[i-1][j];
        }
    }
    vector<int> v;
    for(int i=0;i<=r;i++)
    {
        if(dp[n][i]==true&&i<=r/2)
            v.push_back(i);
    }
    return v;
}

int minSubSum(int arr[],int n,int l,int r)
{
    vector<int> v = subSum(arr,n,r);
    int mn = INT_MAX;
    for(int i=0;i<v.size();i++)
        mn = min(mn,r-2*v[i]);
    return mn;
}

int main()
{
    int arr[4] = {4,7,11,3};
    int l = 0;
    int r = 0;
    for(int i=0;i<4;i++)
        r += arr[i];
    cout<<minSubSum(arr,4,l,r);
}
